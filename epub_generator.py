import logging
from ebooklib import epub
import os

def create_epub(title, podcast_name, summary, major_points, quotes, sources, transcript, file_path):
    """
    Creates an ePub file with the analyzed content of the podcast episode.

    Args:
        title (str): The title of the episode.
        podcast_name (str): The name of the podcast.
        summary (str): The summary generated by the LLM.
        major_points (list): A list of major points from the LLM.
        quotes (list): A list of important quotes from the LLM.
        sources (list): A list of sources referenced, from the LLM.
        transcript (str): The full transcript of the episode.
        file_path (str): The full path where the ePub file should be saved.
    """
    try:
        # --- Book Setup ---
        book = epub.EpubBook()
        book.set_identifier(f"urn:uuid:{os.path.basename(file_path)}")
        book.set_title(title)
        book.set_language('en')
        book.add_author(podcast_name)

        # --- Chapter 1: Summary ---
        summary_content = f"<h1>Summary</h1><p>{summary.replace('\n', '<br/>')}</p>"
        chap_summary = epub.EpubHtml(title='Summary', file_name='chap_01.xhtml', lang='en')
        chap_summary.content = summary_content

        # --- Chapter 2: Major Points ---
        points_html = "<h1>Major Points</h1><ul>"
        if major_points:
            for point in major_points:
                points_html += f"<li>{point}</li>"
        else:
            points_html += "<li>No major points were identified.</li>"
        points_html += "</ul>"
        chap_points = epub.EpubHtml(title='Major Points', file_name='chap_02.xhtml', lang='en')
        chap_points.content = points_html

        # --- Chapter 3: Important Quotes ---
        quotes_html = "<h1>Important Quotes</h1>"
        if quotes:
            for quote in quotes:
                quotes_html += f"<blockquote><p><i>&ldquo;{quote}&rdquo;</i></p></blockquote>"
        else:
            quotes_html += "<p>No notable quotes were identified.</p>"
        chap_quotes = epub.EpubHtml(title='Quotes', file_name='chap_03.xhtml', lang='en')
        chap_quotes.content = quotes_html

        # --- Chapter 4: Sources Referenced ---
        sources_html = "<h1>Sources Referenced</h1><ul>"
        if sources:
            for source in sources:
                sources_html += f"<li>{source}</li>"
        else:
            sources_html += "<li>No sources were referenced.</li>"
        sources_html += "</ul>"
        chap_sources = epub.EpubHtml(title='Sources', file_name='chap_04.xhtml', lang='en')
        chap_sources.content = sources_html
        
        # --- Chapter 5: Full Transcript ---
        transcript_content = f"<h1>Full Transcript</h1><p>{transcript.replace('\n', '<br/>')}</p>"
        chap_transcript = epub.EpubHtml(title='Transcript', file_name='chap_05.xhtml', lang='en')
        chap_transcript.content = transcript_content

        # --- Assemble the Book ---
        book.add_item(chap_summary)
        book.add_item(chap_points)
        book.add_item(chap_quotes)
        book.add_item(chap_sources)
        book.add_item(chap_transcript)

        book.toc = (
            epub.Link('chap_01.xhtml', 'Summary', 'summary'),
            epub.Link('chap_02.xhtml', 'Major Points', 'major_points'),
            epub.Link('chap_03.xhtml', 'Quotes', 'quotes'),
            epub.Link('chap_04.xhtml', 'Sources', 'sources'),
            epub.Link('chap_05.xhtml', 'Transcript', 'transcript')
        )

        book.add_item(epub.EpubNcx())
        book.add_item(epub.EpubNav())

        book.spine = ['nav', chap_summary, chap_points, chap_quotes, chap_sources, chap_transcript]

        # --- Write the ePub File ---
        epub.write_epub(file_path, book, {})
        logging.info(f"ePub successfully created: {file_path}")

    except Exception as e:
        logging.error(f"An error occurred during ePub generation: {e}", exc_info=True)

